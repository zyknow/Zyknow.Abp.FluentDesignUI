@using global::SharpAbp.Abp.Identity
@using Localization.Resources.AbpUi
@using TInput = global::SharpAbp.Abp.Identity.SetPasswordDto
@using TResource = Volo.Abp.Identity.Localization.IdentityResource
@inherits AbpDialogFormBase<TInput, TResource>

<AbpFluentForm HeaderText="@($@"{L["ChangePassword"]} - {User.UserName}")"
               IsConstHeader="true"
               Content="@Content"
               SubmitValidClick="OnSubmitClick"
               CancelClick="CancelClick"
               Localize="@LH.Localize">
    <FluentTextField Style="width: 100%"
                     TextFieldType="TextFieldType.Password"
                     Label="@L["DisplayName:NewPassword"]"
                     @bind-Value="@Content.NewPassword"/>
    <FluentValidationMessage For="@(() => Content.NewPassword)"/>
</AbpFluentForm>

@code {
    [Parameter] public IdentityUserDto User { get; set; }
    [Parameter] public Func<SetPasswordDto, Task<DialogResult?>> SubmitClick { get; set; }

    public IdentityUserChangePasswordDialog()
    {
        LocalizationResource = typeof(TResource);
    }

    protected virtual async Task<DialogResult?> OnSubmitClick()
    {
        return await SubmitClick.Invoke(Content);
    }

} 