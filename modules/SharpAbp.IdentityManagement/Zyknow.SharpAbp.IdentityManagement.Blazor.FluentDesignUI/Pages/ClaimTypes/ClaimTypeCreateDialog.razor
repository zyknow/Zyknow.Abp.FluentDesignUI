@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@using TInput = global::SharpAbp.Abp.Identity.CreateIdentityClaimTypeDto
@using TResource = Volo.Abp.Identity.Localization.IdentityResource
@inherits AbpDialogFormBase<TInput, TResource>

<AbpFluentForm HeaderText="@L["CreateIdentityClaimType"]"
               Content="@Content"
               SubmitValidClick="SubmitClick"
               CancelClick="CancelClick"
               Localize="@LH.Localize">
    <FluentTextField Style="width: 100%" Label="@L["IdentityClaimType:Name"]" @bind-Value="@Content.Name"/>
    <FluentValidationMessage For="@(() => Content.Name)"/>

    <FluentTextField Style="width: 100%" Label="@L["IdentityClaimType:Regex"]" @bind-Value="@Content.Regex"/>
    <FluentValidationMessage For="@(() => Content.Regex)"/>

    <FluentTextField Style="width: 100%" Label="@L["IdentityClaimType:RegexDescription"]"
                     @bind-Value="@Content.RegexDescription"/>
    <FluentValidationMessage For="@(() => Content.RegexDescription)"/>

    <FluentTextField Style="width: 100%" Label="@L["IdentityClaimType:Description"]"
                     @bind-Value="@Content.Description"/>
    <FluentValidationMessage For="@(() => Content.Description)"/>

    <FluentSelect Items="@(Enum.GetValues<IdentityClaimValueType>())" OptionText="@(type=> type.GetDisplayName())"
                  Style="width: 100%" Label="@L["IdentityClaimType:ValueType"]"
                  @bind-SelectedOption="Content.ValueType">
    </FluentSelect>
    <FluentValidationMessage For="@(() => Content.ValueType)"/>

    <FluentStack Style="margin-top: 20px;">
        <FluentCheckbox Label="@L["IdentityClaimType:Required"]" @bind-Value="@Content.Required" />

        <FluentCheckbox Label="@L["IdentityClaimType:IsStatic"]" @bind-Value="@Content.IsStatic"/>
    </FluentStack>

</AbpFluentForm> 