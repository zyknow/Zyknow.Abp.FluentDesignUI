@inherits LayoutComponentBase
@using Microsoft.Extensions.Options
@using Zyknow.Abp.AspnetCore.Components.Web.FluentDesignTheme.Settings
@using Zyknow.Abp.FluentDesignUI.Components
@inject IOptions<AbpFluentDesignThemeOptions> Options


@if (Options.Value.Placement == MenuPlacement.Top)
{
    // TODO: Add Top Theme Design
}
else
{
    <FluentLayout Class="fluent-design-layout">
        <FluentHeader>
            <FluentStack HorizontalGap="20" Orientation="Orientation.Horizontal"
                         HorizontalAlignment="HorizontalAlignment.Left"
                         VerticalAlignment="VerticalAlignment.Center">
                <Branding CollapsedMenuClick="OnCollapse"/>
            </FluentStack>
            <FluentSpacer/>
            <NavToolbar/>
        </FluentHeader>

        <div style="display: flex; flex-direction: row; height: 100%;width: 100%">
            <MainMenu Collapsed="@Collapsed"/>
            <FluentBodyContent Class="fluent-design-body-content">
                <PageAlert/>
                @Body
                @* TODO: EnableMultipleTabs ? *@
                @* @if (!Options.Value.EnableMultipleTabs) *@
                @* { *@
                @*     @Body *@
                @* } *@
                @* else *@
                @* { *@
                @*     <ReuseTabs Class="fluent-design-body-reusetabs" TabPaneClass="fluent-design-body-reusetabs-tabpane" *@
                @*                Draggable></ReuseTabs> *@
                @* } *@
                <FluentToastProvider Position="ToastPosition.BottomRight"/>
                <FluentDialogProvider/>
                <FluentTooltipProvider/>
                <FluentMessageBarProvider/>
                <FluentMenuProvider/>
                @* <UiPageProgress/> *@
            </FluentBodyContent>
        </div>

        <FluentFooter>

        </FluentFooter>

    </FluentLayout>
}

@code
{
    [Inject] protected IFluentDesignSettingsProvider FluentDesignSettingsProvider { get; set; }

    protected bool Collapsed { get; set; } = true;

    protected MenuPlacement MenuPlacement { get; set; }

    protected DesignThemeModes MenuTheme { get; set; }

    protected string HeaderClass { get; set; }

    // protected SiderTheme SiderTheme { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await SetLayout();
        FluentDesignSettingsProvider.SettingChanged += OnSettingChanged;
    }

    protected virtual async Task OnSettingChanged()
    {
        await SetLayout();
        await InvokeAsync(StateHasChanged);
    }

    private async Task SetLayout()
    {
        // SiderTheme = MenuTheme  == MenuTheme.Light ? SiderTheme.Light : SiderTheme.Dark;
        HeaderClass = MenuPlacement == MenuPlacement.Top ? "fluent-design-header-top" : "fluent-design-header-left";
        // HeaderClass = MenuTheme == MenuTheme.Light ? $"{HeaderClass} {HeaderClass}-light" : HeaderClass;
    }

    protected virtual void OnCollapse()
    {
        Collapsed = !Collapsed;
        StateHasChanged();
    }
}

