@using Localization.Resources.AbpUi
@using Microsoft.Extensions.Localization
@using Microsoft.FluentUI.AspNetCore.Components.Icons.Regular
@implements IDisposable
@inject IDialogService DialogService
@inject IStringLocalizer<AbpUiResource> L
@inject IThemeStore ThemeStore
<FluentDesignTheme @bind-Mode="@ThemeStore.ThemeMode"
                   OfficeColor="@ThemeStore.Color"
                   StorageName="theme"/>
<FluentIcon Value="@(new Size20.Settings())" OnClick="ShowPanelAsync"/>

@code {

    async Task ShowPanelAsync()
    {
        await DialogService.ShowPanelAsync<SettingPanel>(null, new DialogParameters<object>()
        {
            Content = null,
            Alignment = HorizontalAlignment.Right,
            Title = L["Settings"],
            PrimaryAction = null,
            SecondaryAction = null,
        });
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            ThemeStore.ThemeModeChanged += ThemeStoreOnThemeModeChanged;
        }
    }

    private async void ThemeStoreOnThemeModeChanged(object? sender, EventArgs e)
    {
        InvokeAsync(StateHasChanged);
    }

    public void Dispose()
    {
        ThemeStore.ThemeModeChanged -= ThemeStoreOnThemeModeChanged;
    }

}