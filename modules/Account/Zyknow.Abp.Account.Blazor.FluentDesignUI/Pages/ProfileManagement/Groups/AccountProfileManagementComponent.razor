@inherits AccountBlazorFluentDesignComponentBase
@inject AbpBlazorMessageLocalizerHelper<AccountResource> LH
@inject IProfileAppService ProfileAppService

@if (Input != null)
{
    <AbpFluentForm Content="Input" SubmitClick="UpdatePersonalInfoAsync" Localize="@LH.Localize">
        <FluentTextField Style="width: 100%" @bind-Value="Input.UserName"
                         Label="@L["DisplayName:UserName"]"></FluentTextField>
        <FluentValidationMessage For="@(() => Input.UserName)"></FluentValidationMessage>

        <FluentTextField Style="width: 100%" @bind-Value="Input.Name"
                         Label="@L["DisplayName:Name"]"></FluentTextField>
        <FluentValidationMessage For="@(() => Input.Name)"></FluentValidationMessage>

        <FluentTextField Style="width: 100%" @bind-Value="Input.Surname"
                         Label="@L["DisplayName:Surname"]"></FluentTextField>
        <FluentValidationMessage For="@(() => Input.Surname)"></FluentValidationMessage>

        <FluentTextField Style="width: 100%" @bind-Value="Input.Email"
                         Label="@L["DisplayName:Email"]"></FluentTextField>
        <FluentValidationMessage For="@(() => Input.Email)"></FluentValidationMessage>

        <FluentTextField Style="width: 100%" @bind-Value="Input.PhoneNumber"
                         Label="@L["DisplayName:PhoneNumber"]"></FluentTextField>
        <FluentValidationMessage For="@(() => Input.PhoneNumber)"></FluentValidationMessage>
    </AbpFluentForm>
}

@code {

    protected PersonalInfoModel Input;

    protected override async Task OnInitializedAsync()
    {
        await GetUserInformations();
    }

    protected async Task GetUserInformations()
    {
        var user = await ProfileAppService.GetAsync();

        Input = ObjectMapper.Map<ProfileDto, PersonalInfoModel>(user);
    }

    protected virtual async Task UpdatePersonalInfoAsync()
    {
        await ProfileAppService.UpdateAsync(
            ObjectMapper.Map<PersonalInfoModel, UpdateProfileDto>(Input)
        );

        await UiMessageService.Success(L["PersonalSettingsSaved"]);
    }

}