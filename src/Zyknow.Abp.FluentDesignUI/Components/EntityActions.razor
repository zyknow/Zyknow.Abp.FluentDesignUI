@typeparam TItem

<CascadingValue Value="this" IsFixed="true">
    @if (Type == ActionType.Dropdown)
    {
        if (HasPrimaryAction)
        {
            <FluentMenuButton Style="z-index: 10" @ref="ButtonRef" Text="@PrimaryAction.Text"
                              OnMenuChanged="@(async () => await PrimaryAction.ActionClickedAsync())"
                              ButtonAppearance="@PrimaryAction.Appearance">
                @ChildContent
            </FluentMenuButton>
        }
        else
        {
            <FluentMenuButton @ref="ButtonRef" Text="@ToggleText">
                @ChildContent
            </FluentMenuButton>
        }
    }
    else
    {
        @ChildContent
    }

</CascadingValue>

@code{

    FluentMenuButton ButtonRef;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            ButtonRef.Button.StopPropagation = true;
            InvokeAsync(StateHasChanged);
        }
    }

}
